// Code generated by MockGen. DO NOT EDIT.
// Source: interface.go

// Package services is a generated GoMock package.
package services

import (
	context "context"
	models "employee/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockEmp is a mock of Emp interface.
type MockEmp struct {
	ctrl     *gomock.Controller
	recorder *MockEmpMockRecorder
}

// MockEmpMockRecorder is the mock recorder for MockEmp.
type MockEmpMockRecorder struct {
	mock *MockEmp
}

// NewMockEmp creates a new mock instance.
func NewMockEmp(ctrl *gomock.Controller) *MockEmp {
	mock := &MockEmp{ctrl: ctrl}
	mock.recorder = &MockEmpMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockEmp) EXPECT() *MockEmpMockRecorder {
	return m.recorder
}

// CreateStore mocks base method.
func (m *MockEmp) CreateStore(ctx context.Context, emp models.Employee) (models.Employee, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateStore", ctx, emp)
	ret0, _ := ret[0].(models.Employee)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateStore indicates an expected call of CreateStore.
func (mr *MockEmpMockRecorder) CreateStore(ctx, emp interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateStore", reflect.TypeOf((*MockEmp)(nil).CreateStore), ctx, emp)
}

// GetById mocks base method.
func (m *MockEmp) GetById(ctx context.Context, id int) (models.Employee, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", ctx, id)
	ret0, _ := ret[0].(models.Employee)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockEmpMockRecorder) GetById(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockEmp)(nil).GetById), ctx, id)
}
